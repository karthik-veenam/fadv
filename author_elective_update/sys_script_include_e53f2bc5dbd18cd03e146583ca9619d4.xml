<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include"><sys_script_include action="DELETE"><access>package_private</access><active>true</active><api_name>x_snc_fadv.FirstAdvantageScheduleScript</api_name><caller_access/><client_callable>false</client_callable><description/><name>FirstAdvantageScheduleScript</name><script><![CDATA[var FirstAdvantageScheduleScript = Class.create();
FirstAdvantageScheduleScript.prototype = {
    initialize: function() {
    },

    initiateCCTokenFlow: function(reqJson) {

        // Create an output tag called result
       var result = this.newItem('result');
gs.info("dfg");
        // Get from the parameters
         var requestor_context = 'oauth_2_0_credentials';
    var grantType = 'client_credentials';
    var oauthRequestorSysId = reqJson.oauthRequestorSysId;
    var oauthProfileId = reqJson.oauthProfileId;
       gs.info("Priytam Check requestor: " + requestor + " requestor_context: " + requestor_context + " oauth_provider_profile: " + oauth_provider_profile + " oauth_provider_id: " );
        //request for a token using CC flow
        var tokenRequest = new sn_auth.GlideOAuthClientRequest();
        tokenRequest.setParameter('oauth_requestor_context', requestor_context);
        tokenRequest.setParameter('oauth_requestor', oauthRequestorSysId);
        tokenRequest.setParameter('oauth_provider_profile', oauthProfileId);
       tokenRequest.setParameter('oauth_provider_id', oauth_provider_id);
        tokenRequest.setHeader('grant_type', 'client_credentials');
        var oAuthClient = new sn_auth.GlideOAuthClient();
        var tokenResponse = oAuthClient.requestTokenByRequest(null, tokenRequest);
       var errorMsg = tokenResponse.getErrorMessage();
		//var errorMsg = "error";
        //result.setAttribute('mynamis', 'priytam');
//         result.setAttribute('responseCode', tokenResponse.getResponseCode());
//         result.setAttribute('errorMessage', errorMsg);
//         var flowName = 'client_credentials';
//         var tokenvalue = 'false';
//         if (errorMsg) {
//             gs.log('OAuth authentication failed for ' + flowName + ' grant type flow');
//             tokenvalue = 'false';
//             return;
//         }
//         if (tokenResponse) {
//             var token = tokenResponse.getToken();
//             if (token) {
//                 if (token.getAccessToken()) {                 
//                     gs.info("Successfully obtained OAuth token");
//                     tokenvalue = 'true';                 
//                 }
//             }
//         }
//         result.setAttribute('isToken', tokenvalue);
        return;
    },
  
    type: 'FirstAdvantageScheduleScript'
};]]></script><sys_class_name>sys_script_include</sys_class_name><sys_created_by>sheetals</sys_created_by><sys_created_on>2019-11-22 10:19:17</sys_created_on><sys_id>e53f2bc5dbd18cd03e146583ca9619d4</sys_id><sys_mod_count>3</sys_mod_count><sys_name>FirstAdvantageScheduleScript</sys_name><sys_package display_value="First Advantage Spoke" source="x_snc_fadv">56e01698dbb333403e146583ca96192d</sys_package><sys_policy>read</sys_policy><sys_scope display_value="First Advantage Spoke">56e01698dbb333403e146583ca96192d</sys_scope><sys_update_name>sys_script_include_e53f2bc5dbd18cd03e146583ca9619d4</sys_update_name><sys_updated_by>sheetals</sys_updated_by><sys_updated_on>2019-11-22 10:32:34</sys_updated_on></sys_script_include></record_update>