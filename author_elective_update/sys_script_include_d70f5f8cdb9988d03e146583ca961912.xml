<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include"><sys_script_include action="DELETE"><access>public</access><active>true</active><api_name>x_snc_fadv.OauthUtilFirstAdvantageToken</api_name><caller_access>1</caller_access><client_callable>true</client_callable><description/><name>OauthUtilFirstAdvantageToken</name><script><![CDATA[var OauthUtilFirstAdvantageToken = Class.create();
OauthUtilFirstAdvantageToken.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    initiateCCTokenFlow: function() {

        // Create an output tag called result
        var result = this.newItem('result');
        // Get from the parameters
        var requestor = this.getParameter('oauth_requestor');
        var requestor_context = this.getParameter('oauth_requestor_context');
        var oauth_provider_profile = this.getParameter('oauth_provider_profile');
        var oauth_provider_id = this.getParameter('oauth_provider_id');
        gs.info("Priytam Check requestor: " + requestor + " requestor_context: " + requestor_context + " oauth_provider_profile: " + oauth_provider_profile + " oauth_provider_id: ");
        //request for a token using CC flow
        var tokenRequest = new sn_auth.GlideOAuthClientRequest();
        tokenRequest.setParameter('oauth_requestor_context', requestor_context);
        tokenRequest.setParameter('oauth_requestor', requestor);
        tokenRequest.setParameter('oauth_provider_profile', oauth_provider_profile);
        tokenRequest.setParameter('oauth_provider_id', oauth_provider_id);
        tokenRequest.setHeader('grant_type', 'client_credentials');
        var oAuthClient = new sn_auth.GlideOAuthClient();
        var tokenResponse = oAuthClient.requestTokenByRequest(null, tokenRequest);
        var errorMsg = tokenResponse.getErrorMessage();

        result.setAttribute('responseCode', tokenResponse.getResponseCode());
        result.setAttribute('errorMessage', errorMsg);
        var flowName = 'client_credentials';
        var tokenvalue = 'false';
        if (errorMsg) {
            gs.log('OAuth authentication failed for ' + flowName + ' grant type flow');
            tokenvalue = 'false';
            return;
        }
        if (tokenResponse) {
            var token = tokenResponse.getToken();
			gs.info("the tok is :"+token.getAccessToken());
            if (token) {
                if (token.getAccessToken()) {
                    gs.info("Successfully obtained OAuth token");
                    tokenvalue = 'true';
                }
            }
        }
        result.setAttribute('isToken', tokenvalue);
        return;
    },
    type: 'OauthUtilFirstAdvantageToken'
});]]></script><sys_class_name>sys_script_include</sys_class_name><sys_created_by>priytam</sys_created_by><sys_created_on>2019-11-19 06:32:48</sys_created_on><sys_id>d70f5f8cdb9988d03e146583ca961912</sys_id><sys_mod_count>48</sys_mod_count><sys_name>OauthUtilFirstAdvantageToken</sys_name><sys_package display_value="First Advantage Spoke" source="x_snc_fadv">56e01698dbb333403e146583ca96192d</sys_package><sys_policy>read</sys_policy><sys_scope display_value="First Advantage Spoke">56e01698dbb333403e146583ca96192d</sys_scope><sys_update_name>sys_script_include_d70f5f8cdb9988d03e146583ca961912</sys_update_name><sys_updated_by>chakradhar.jn@snc</sys_updated_by><sys_updated_on>2019-11-25 15:34:44</sys_updated_on></sys_script_include></record_update>